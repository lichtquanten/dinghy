services:
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: development
    ports:
      - "${WEB_PORT:-5173}:${WEB_PORT:-5173}"
    env_file: ${ENV_FILE}
    depends_on:
      api:
        condition: service_healthy
    restart: ${RESTART_POLICY:-unless-stopped}
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:${WEB_PORT:-5173}/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./apps/web/src:/app/apps/web/src
      - ./apps/web/public:/app/apps/web/public
      - ./apps/web/index.html:/app/apps/web/index.html
      - ./packages/ui:/app/packages/ui
      - ./packages/ai-models:/app/packages/ai-models
    stdin_open: true
    tty: true
    networks:
      - app-network

  api:
    build:
      target: development
    volumes:
      - ./apps/api/src:/app/apps/api/src
    stdin_open: true
    tty: true
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge
